---
- name: Run with unreachable capture and final report
  hosts: connectivity-test
  gather_facts: false
  any_errors_fatal: false

  vars:
    report_dir: "/runner/project/artifacts"   # writable inside EE; downloadable from job run
    csv_report_path: "{{ report_dir }}/unreachable_report.csv"
    json_report_path: "{{ report_dir }}/unreachable_report.json"
    summary_path: "{{ report_dir }}/summary.json"
    msg_txt_file: "{{ report_dir }}/report.txt"

    s3_bucket: "terraform-taiseer"     # <-- change me
    s3_region: "us-east-2"                 # <-- change me
    s3_acl: "private"
    s3_storage_class: "STANDARD"
    s3_presign_expires: 86400   
    s3_prefix: "unreachable/error_report/job_123"

  pre_tasks:
    - name: Ensure report directory exists (inside EE)
      file:
        path: "{{ report_dir }}"
        state: directory
        mode: '0755'
      delegate_to: localhost
      # run_once: true

    - name: Connectivity pre-check (captures 'unreachable' early)
        # This uses the same connection plugin your job uses.
      block:
        - name: Wait for connection (short, configurable)
          ansible.builtin.wait_for_connection:
            delay: 0
            sleep: 2
            timeout: 20
          register: _conn
      rescue:
        - name: Aggregate unreachable info for this host
          ansible.builtin.set_stats:
            aggregate: true
            data:
              unreachable_hosts: >-
                {{ (unreachable_hosts | default([])) +
                   [ {
                       "host": inventory_hostname,
                       "msg": (_conn.msg | default('unreachable')),
                       "exception": (_conn.exception | default('')),
                       "elapsed": (_conn.elapsed | default(''))
                     } ] }}
        - name: Use this task to write the msg to the report. 
          ansible.builtin.debug:
            msg: "{{ _conn.msg }}"
        
        - name: Render CSV report (readable by anyone)
          ansible.builtin.copy:
            dest: "{{ msg_txt_file }}"
            mode: '0644'
            content: "{{ _conn.msg }}"
          delegate_to: localhost

        - name: Stop running further tasks on this host
          ansible.builtin.meta: end_host

  tasks:
    - name: Example task that only runs on reachable hosts
      ansible.builtin.command: /usr/bin/true

  post_tasks:
    - name: Ensure we always have the list defined
      ansible.builtin.set_fact:
        _unreach: "{{ unreachable_hosts | default([]) }}"
      # run_once: true

    - name: Render CSV report (readable by anyone)
      ansible.builtin.copy:
        dest: "{{ csv_report_path }}"
        mode: '0644'
        content: |
          host,msg,elapsed
          {% for item in _unreach %}
          {{ item.host|replace(',', ';') }},{{ (item.msg|string)|replace('\n',' ')|replace(',', ';') }},{{ item.elapsed|default('') }}
          {% endfor %}
      delegate_to: localhost
      # run_once: true

    - name: Render JSON report (structured)
      ansible.builtin.copy:
        dest: "{{ json_report_path }}"
        mode: '0644'
        content: "{{ _unreach | to_nice_json }}"
      delegate_to: localhost
      # run_once: true
    
    - name: Build a one-file summary (counts, job, files)
      ansible.builtin.copy:
        dest: "{{ summary_path }}"
        mode: '0644'
        content: >-
          {{
            {
              "unreachable_count": (_unreach | length),
              "reports": {
                "csv": csv_report_path | basename,
                "json": json_report_path | basename
              }
            } | to_nice_json
          }}
      delegate_to: localhost
      # run_once: true

    - name: Upload reports to S3
    # Requires amazon.aws collection and AWS credential/role
      amazon.aws.s3_object:
        bucket: "{{ s3_bucket }}"
        region: "{{ s3_region }}"
        mode: put
        object: "{{ s3_prefix }}/{{ item | basename }}"
        src: "{{ item }}"
       # acl: "{{ s3_acl }}"
        # storage_class: "{{ s3_storage_class }}"
        # Optional org controls:
        # server_side_encryption: aws:kms
        # sse_kms_key_id: "arn:aws:kms:REGION:ACCOUNT:key/KEY-ID"
      loop:
        - "{{ csv_report_path }}"
        - "{{ json_report_path }}"
        - "{{ summary_path }}"
        - "{{ msg_txt_file }}"
      register: _uploads
      delegate_to: localhost
      run_once: true

    - name: Surface a summary in the job’s “Stats”
      ansible.builtin.set_stats:
        data:
          unreachable_summary:
            count: "{{ _unreach | length }}"
            report_csv: "{{ csv_report_path }}"
            report_json: "{{ json_report_path }}"
      # run_once: true