- name: Provision EC2
  hosts: localhost
  gather_facts: false
  vars:
    aws_region: us-east-2
  tasks:
    - name: Launch EC2 instance
      amazon.aws.ec2_instance:
        name: my-ec2-instance
        key_name: eda_key
        instance_type: t3.micro
        image_id: ami-0f70b01eb0d5c5caa
        region: us-east-2
        security_groups: sg-085986a21981ac485
        vpc_subnet_id: subnet-0e872e25395b17d20
        network_interfaces:
          - assign_public_ip: true
            
        wait: true
      register: ec2_out

    - name: Pick the first (or only) instance
      ansible.builtin.set_fact:
        new_instance: "{{ ec2_out.instances[0] }}"

    - name: Show instance details
      ansible.builtin.debug:
        var: new_instance

    - name: Save new instance DNS
      set_stats:
        data:
          new_ec2_dns: "{{ ec2_out.instances[0].public_dns_name }}"
    
    - name: Add the new EC2 instance to inventory
      ansible.builtin.add_host:
        name: "{{ new_instance.public_dns_name | default(new_instance.private_dns_name) }}"
        groups: new_ec2
        ansible_host: "{{ new_instance.public_ip_address | default(new_instance.private_ip_address) }}"
        ansible_user: ec2-user     # adjust depending on AMI (ubuntu, rocky, etc.)
        instance_id: "{{ new_instance.instance_id }}"
        private_ip: "{{ new_instance.private_ip_address }}"
        public_ip: "{{ new_instance.public_ip_address | default('') }}"
        region: "{{ aws_region }}"

